{"ast":null,"code":"import { FormControl, FormGroup, Validators } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/login.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"primeng/button\";\nimport * as i5 from \"primeng/card\";\nimport * as i6 from \"primeng/inputtext\";\nimport * as i7 from \"@angular/forms\";\nfunction LoginComponent_span_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"h6\", 15);\n    i0.ɵɵtext(2, \"Es obligatorio escribir un usuario\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_span_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"h6\", 15);\n    i0.ɵɵtext(2, \"El usuario no puede tener m\\u00E1s de 20 caracteres\");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction LoginComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\")(1, \"h6\", 15);\n    i0.ɵɵtext(2, \"Es obligatorio escribir una contrase\\u00F1a\");\n    i0.ɵɵelementEnd()();\n  }\n}\nconst _c0 = function () {\n  return {\n    \"margin-left\": \"-50px\"\n  };\n};\nexport class LoginComponent {\n  constructor(loginService, router) {\n    this.loginService = loginService;\n    this.router = router;\n    this.formLogIn = new FormGroup({\n      username: new FormControl(null, [Validators.required, Validators.maxLength(20)]),\n      password: new FormControl(null, [Validators.required])\n    });\n  }\n  loginboton(form) {\n    // console.log(this.formLogIn.value);\n    if (this.formLogIn.valid) {\n      // const { username, password } = this.formLogIn.value; // Obtén los valores del formulario\n      // console.log('Valor de username:', username);\n      // console.log('Valor de password:', password);\n      console.log('Valores del formulario:', this.formLogIn.value);\n      this.loginService.login(this.formLogIn.value).subscribe(response => {\n        const accessToken = response.access;\n        const refreshToken = response.refresh;\n        console.log('funciona');\n        localStorage.setItem('access_token', accessToken);\n        localStorage.setItem('refresh_token', refreshToken);\n        this.router.navigate(['/inicio']);\n      }, error => {\n        console.error('Error al iniciar sesión:', error);\n        console.log('intenta otra vez');\n        console.log('Valores del formulario:', this.formLogIn.value);\n      });\n    }\n  }\n  validacion_datos_usuario(formControl, tipo_validacion) {\n    return this.formLogIn.get(`${formControl}`)?.errors?.[tipo_validacion] && (this.formLogIn.get(`${formControl}`)?.dirty || this.formLogIn.get(`${formControl}`)?.touched);\n  }\n  static #_ = this.ɵfac = function LoginComponent_Factory(t) {\n    return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.LoginService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginComponent,\n    selectors: [[\"pagina-login\"]],\n    features: [i0.ɵɵProvidersFeature([HttpClientModule])],\n    decls: 22,\n    vars: 7,\n    consts: [[2, \"display\", \"flex\", \"flex-direction\", \"column\", \"align-items\", \"center\"], [\"alt\", \"Card\", \"src\", \"assets/imagenes/logo.jpg\", 1, \"img\"], [3, \"formGroup\"], [\"header\", \"Inicio de sesi\\u00F3n\", 1, \"card\"], [1, \"card\", \"flex\", \"justify-content-center\"], [1, \"flex\", \"flex-column\", \"gap-2\"], [1, \"flex\", \"flex-column\"], [2, \"text-align\", \"left\"], [\"for\", \"username\"], [\"formControlName\", \"username\", \"pInputText\", \"\", \"id\", \"username\", \"aria-describedby\", \"username-help\", 2, \"width\", \"22rem\", \"margin-left\", \"-50px\"], [4, \"ngIf\"], [\"for\", \"password\"], [\"formControlName\", \"password\", \"pInputText\", \"\", \"id\", \"password\", \"type\", \"password\", 2, \"width\", \"22rem\", \"margin-left\", \"-50px\"], [2, \"padding\", \"10px\"], [\"label\", \"Submit\", 3, \"click\"], [2, \"color\", \"red\", \"font-size\", \"12px\", \"margin\", \"0%\"]],\n    template: function LoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelement(1, \"img\", 1);\n        i0.ɵɵelementStart(2, \"form\", 2)(3, \"p-card\", 3)(4, \"div\", 4)(5, \"div\", 5)(6, \"div\", 6)(7, \"div\", 7)(8, \"label\", 8);\n        i0.ɵɵtext(9, \"Usuario\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(10, \"input\", 9);\n        i0.ɵɵtemplate(11, LoginComponent_span_11_Template, 3, 0, \"span\", 10);\n        i0.ɵɵtemplate(12, LoginComponent_span_12_Template, 3, 0, \"span\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(13, \"div\", 5)(14, \"div\", 6)(15, \"div\", 7)(16, \"label\", 11);\n        i0.ɵɵtext(17, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(18, \"input\", 12);\n        i0.ɵɵtemplate(19, LoginComponent_span_19_Template, 3, 0, \"span\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(20, \"div\", 13)(21, \"p-button\", 14);\n        i0.ɵɵlistener(\"click\", function LoginComponent_Template_p_button_click_21_listener() {\n          return ctx.loginboton(ctx.formLogIn);\n        });\n        i0.ɵɵelementEnd()()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.formLogIn);\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"ngIf\", ctx.validacion_datos_usuario(\"username\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.validacion_datos_usuario(\"username\", \"maxlength\"));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.validacion_datos_usuario(\"password\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵstyleMap(i0.ɵɵpureFunction0(6, _c0));\n      }\n    },\n    dependencies: [i3.NgIf, i4.Button, i5.Card, i6.InputText, i7.ɵNgNoValidate, i7.DefaultValueAccessor, i7.NgControlStatus, i7.NgControlStatusGroup, i7.FormGroupDirective, i7.FormControlName],\n    styles: [\".img[_ngcontent-%COMP%] {\\n  width: 20rem;\\n}\\n\\n.card[_ngcontent-%COMP%] {\\n  width: 25rem;\\n  text-align: center;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvcGFnaW5hcy9sb2dpbi9sb2dpbi5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNBLFlBQUE7QUFDQTs7QUFHQTtFQUNJLFlBQUE7RUFDQSxrQkFBQTtBQUFKIiwic291cmNlc0NvbnRlbnQiOlsiLmltZyB7XHJcbndpZHRoOiAyMHJlbTtcclxuXHJcbn1cclxuXHJcbi5jYXJkIHtcclxuICAgIHdpZHRoOjI1cmVtO1xyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","Validators","HttpClientModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","LoginComponent","constructor","loginService","router","formLogIn","username","required","maxLength","password","loginboton","form","valid","console","log","value","login","subscribe","response","accessToken","access","refreshToken","refresh","localStorage","setItem","navigate","error","validacion_datos_usuario","formControl","tipo_validacion","get","errors","dirty","touched","_","ɵɵdirectiveInject","i1","LoginService","i2","Router","_2","selectors","features","ɵɵProvidersFeature","decls","vars","consts","template","LoginComponent_Template","rf","ctx","ɵɵelement","ɵɵtemplate","LoginComponent_span_11_Template","LoginComponent_span_12_Template","LoginComponent_span_19_Template","ɵɵlistener","LoginComponent_Template_p_button_click_21_listener","ɵɵadvance","ɵɵproperty","ɵɵstyleMap","ɵɵpureFunction0","_c0"],"sources":["C:\\Users\\genes\\OneDrive\\Documentos\\GitHub\\t2_mfds_2023\\front_empresa\\src\\app\\paginas\\login\\login.component.ts","C:\\Users\\genes\\OneDrive\\Documentos\\GitHub\\t2_mfds_2023\\front_empresa\\src\\app\\paginas\\login\\login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\r\nimport { FormControl,FormGroup, Validators } from '@angular/forms';\r\nimport { LoginService } from 'src/app/services/login.service';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'pagina-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n  providers:[HttpClientModule]\r\n})\r\nexport class LoginComponent {\r\n\r\n  public formLogIn = new FormGroup({\r\n    username: new FormControl(null, [Validators.required,Validators.maxLength(20)]),\r\n    password: new FormControl(null, [Validators.required]),\r\n  });\r\n\r\n  constructor(private loginService: LoginService, private router: Router) { }\r\n\r\n  loginboton(form: any) {\r\n\r\n    // console.log(this.formLogIn.value);\r\n    \r\n    if (this.formLogIn.valid) {\r\n      // const { username, password } = this.formLogIn.value; // Obtén los valores del formulario\r\n      // console.log('Valor de username:', username);\r\n      // console.log('Valor de password:', password);\r\n      \r\n      console.log('Valores del formulario:', this.formLogIn.value);\r\n      this.loginService.login(this.formLogIn.value).subscribe(\r\n        (response) => {\r\n          const accessToken = response.access;\r\n          const refreshToken = response.refresh;\r\n         console.log('funciona');\r\n          \r\n          localStorage.setItem('access_token', accessToken);\r\n          localStorage.setItem('refresh_token', refreshToken);\r\n  \r\n         \r\n         \r\n          this.router.navigate(['/inicio']);\r\n        },\r\n        (error) => {\r\n          console.error('Error al iniciar sesión:', error);\r\n          console.log('intenta otra vez');\r\n          console.log('Valores del formulario:', this.formLogIn.value);\r\n          \r\n          \r\n       \r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  validacion_datos_usuario(formControl:any, tipo_validacion:any) {\r\n    return this.formLogIn.get(`${formControl}`)?.errors?.[tipo_validacion]  && \r\n    (this.formLogIn.get(`${formControl}`)?.dirty || \r\n    this.formLogIn.get(`${formControl}`)?.touched);\r\n  }\r\n\r\n\r\n}\r\n","\r\n<div style=\"display: flex; flex-direction: column; align-items: center;\">\r\n    <img alt=\"Card\" src=\"assets/imagenes/logo.jpg\" class=\"img\">\r\n    <form [formGroup]=\"formLogIn\">\r\n    <p-card header=\"Inicio de sesión\" class=\"card\">\r\n      <div class=\"card flex justify-content-center\">\r\n        <div class=\"flex flex-column gap-2\">\r\n          <div class=\"flex flex-column\">\r\n            <div style=\"text-align: left;\">\r\n             <label for=\"username\">Usuario</label>\r\n            </div>\r\n            <input formControlName=\"username\" style=\"width: 22rem;margin-left: -50px;\" pInputText id=\"username\" aria-describedby=\"username-help\" />\r\n            <span *ngIf=\"validacion_datos_usuario('username', 'required')\"><h6 style=\"color: red; font-size: 12px; margin:0%;\">Es obligatorio escribir un usuario</h6></span>\r\n            <span *ngIf=\"validacion_datos_usuario('username', 'maxlength')\"><h6 style=\"color: red; font-size: 12px; margin:0%;\">El usuario no puede tener más de 20 caracteres</h6></span>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex flex-column gap-2\">\r\n            <div class=\"flex flex-column\">\r\n              <div style=\"text-align: left;\">\r\n               <label  for=\"password\">Contraseña</label>\r\n              </div>\r\n              <input formControlName=\"password\" style=\"width: 22rem;margin-left: -50px;\" pInputText id=\"password\" type=\"password\" /> \r\n             <span *ngIf=\"validacion_datos_usuario('password', 'required')\"><h6 style=\"color: red; font-size: 12px; margin:0%;\">Es obligatorio escribir una contraseña</h6></span>\r\n            </div>\r\n        </div>\r\n        <div style=\"padding: 10px;\">\r\n            <p-button (click)=\"loginboton(formLogIn)\" [style]=\"{'margin-left':'-50px'}\"  label=\"Submit\"></p-button>\r\n        </div>\r\n     </div>\r\n    </p-card>\r\n    </form>\r\n</div>\r\n\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}